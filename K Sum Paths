Given a binary tree and an integer K. Find the number of paths in the tree which have their sum equal to K.
A path may start from any node and end at any node in the downward direction.
class Solution{
  public:
    void solve(Node* root,int k,int &count,vector<int> path)
    {
        if(root==NULL)
          return ;
        path.push_back(root->data);
        solve(root->left,k,count,path);
        solve(root->right,k,count,path);
        int n = path.size();
        int sum=0;
        
        for(int i=n-1;i>=0;i--)
        {
            sum+=path[i];
            if(sum==k)
            {
                count++;
            }
        }
        path.pop_back();
        
    }
    int sumK(Node *root,int k)
    {
        vector<int> ans;
        int count = 0;
        solve(root,k,count,ans);
        return count;
    }
};
