Given a binary tree of size  N, a node, and a positive integer k., Your task is to complete the function kthAncestor(), the function should return the kth ancestor of the given node in the binary tree. If there does not exist any such ancestor then return -1.
Note: It is guaranteed that the node exists in the tree.
Node* solve(Node* root,int &k , int node)
{
    if(root==NULL)
      return NULL;
    //if we encounter the given node we should return it 
    if(root->data==node)
    {
        return root;
    }
    //call on left
    Node* left = solve(root->left,k,node);
    Node* right = solve(root->right,k,node);
    
    //check id left is not null and right is null
    if(left!=NULL && right==NULL)
    {
        k--;
        if(k<=0)
        {
            //we got the ans
            k=INT_MAX;
            return root;
        }
        return left;
    }
    if(left==NULL && right !=NULL)
    {
        k--;
        if(k<=0)
        {
            k=INT_MAX;
            return root;
        }
        return right;
        
    }
    return NULL;
}
int kthAncestor(Node *root, int k, int node)
{
    // Code here
    Node* ans = solve(root,k,node);
    if(ans==NULL || ans->data==node)
    {
        return -1;
    }
    
    return ans->data;
    
}
