Find a pair with given target in BST
Given a Binary Search Tree and a target sum. Check whether there's a pair of Nodes in the BST with value summing up to the target sum. 
class Solution{
  public:
    // root : the root Node of the given BST
    // target : the target sum
    void inorder(Node* root,vector<int> &in)
    {
        if(root==NULL)
          return ;
          
        inorder(root->left,in);
        in.push_back(root->data);
        inorder(root->right,in);
    }
    int isPairPresent(struct Node *root, int target)
    {
        // as the inorder travsersal of bst is shorted so we will use the two pointer
        //method and find the sum
         vector<int> inorderVal;
         inorder(root,inorderVal); 
         int i=0;
         int j = inorderVal.size()-1;
         
         while(i<j)
         {
             int sum = inorderVal[i]+inorderVal[j];
             if(sum==target)
               return 1;
             else if(sum>target)
             {
                 j--;
             }
             else
             i++;
         }
         return false;
    }
};
