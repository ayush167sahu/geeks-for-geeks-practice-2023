Given a Binary Search Tree. Convert a given BST into a Special Max Heap with the condition that all the values in the 
left subtree of a node should be less than all the values in the right subtree of the node. This condition is applied 
on all the nodes in the so converted Max Heap
class Solution{
  public:
  
    void inorder(Node* root,vector<int> &ans)
    {
        if(root==NULL)
        {
            return;
        }
        inorder(root->left,ans);
        ans.push_back(root->data);
        inorder(root->right,ans);
        
    }
      void fillPostorder(Node* root, vector<int> &ans,int &index)
    {
        //the post order traverdal is to be displayed
        if(root==NULL)
          return;
        fillPostorder(root->left,ans,index);
        fillPostorder(root->right,ans,index);
        root->data = ans[index++];
    }
    void convertToMaxHeapUtil(Node* root)
    {
        // Your code goes here
        vector<int> ans;
        inorder(root,ans);
        int i=0;
        
        fillPostorder(root,ans,i);
    }    
};
